name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHCR_USER: robinbaeckman
  GHCR_PAT: ${{ secrets.GHCR_PAT }}
  DOCKER_BUILDKIT: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Check formatting
        run: task fmt-check
      - name: Run lint
        run: task lint

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: gohotels
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: gohotels
        ports: [5432:5432]
        options: >-
          --health-cmd "pg_isready -U gohotels"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://gohotels:secret@localhost:5432/gohotels?sslmode=disable
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.17.0
          echo "${HOME}/go/bin" >> $GITHUB_PATH
      - run: |
          for i in {1..10}; do pg_isready -h localhost -U gohotels && break || sleep 1; done
      - run: task db-init
      - run: task test

  integration:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - name: Run integration tests
        run: task integration-test

  coverage-unit:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - run: task coverage-unit
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build-scan-push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - uses: arduino/setup-task@v1
        with:
          version: 3.x
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db
          restore-keys: |
            ${{ runner.os }}-trivy-db

      - name: Build image (with BuildKit)
        run: task build-image

      - name: Local scans
        run: task security

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: 'ghcr.io/${{ env.GHCR_USER }}/go-hotels:${{ github.sha }}'
          severity: 'HIGH,CRITICAL'
          exit-code: 1

      - name: Push image
        run: task push-image
