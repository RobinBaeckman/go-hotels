name: 🧪 CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GHCR_USER: robinbaeckman
  GHCR_PAT: ${{ secrets.GHCR_PAT }}
  DOCKER_BUILDKIT: 1

jobs:

  lint:
    name: 🔢 Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Print env 
        run: task env-check
      - name: Check formatting
        run: task fmt-check
      - name: Run lint
        run: task lint

  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - name: Generate SQL code
        run: task db-gen
      - name: Run unit tests
        run: task test-unit

  integration:
    name: 🔮 Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: gohotels
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: gohotels
        ports: [5432:5432]
        options: >-
          --health-cmd "pg_isready -U gohotels"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://gohotels:secret@localhost:5432/gohotels?sslmode=disable
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - uses: arduino/setup-task@v1

      - name: ♻️ Cache Go build and bin
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/bin
          key: ${{ runner.os }}-gobin-${{ hashFiles('**/go.sum') }}

      - run: echo "${HOME}/go/bin" >> $GITHUB_PATH

      # - name: Copy CI env
      #   run: cp .env.ci .env

      - name: Run integration tests
        run: task test-integration

  security-check:
    name: 🔒 SAST Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - name: Run static security checks
        run: task security-check

  docker-build:
    name: 🛠️ Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - uses: arduino/setup-task@v1
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        run: task docker-build

  docker-scan:
    name: 🔍 Trivy Scan
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4

      - name: 🧰 Setup Task
        uses: arduino/setup-task@v1

      - name: 🔐 Docker login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build Docker image (again)
        run: task docker-build

      - name: 💾 Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db
          restore-keys: |
            ${{ runner.os }}-trivy-db

      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: 'ghcr.io/${{ env.GHCR_USER }}/go-hotels:${{ github.sha }}'
          severity: 'HIGH,CRITICAL'
          exit-code: 1

  docker-push:
    name: 🚀 Push Docker Image
    runs-on: ubuntu-latest
    needs: [docker-scan, docker-build, security-check, integration, unit-tests, lint]
    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4

      - name: 🧰 Setup Task
        uses: arduino/setup-task@v1

      - name: 🔐 Docker login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Rebuild Docker image
        run: task docker-build

      - name: 📤 Push Docker image
        run: task docker-push
